{
	"id": "7ee9c265-eabd-476b-8c08-7725e8aed810",
	"name": "udacity-fsnd-udaspicelatte",
	"allTests": [],
	"timestamp": "2020-02-10T17:40:25.242Z",
	"collection_id": "7b3a6bc3-e49e-484e-9ce4-c406344bb03b",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "7b3a6bc3-e49e-484e-9ce4-c406344bb03b",
		"name": "udacity-fsnd-udaspicelatte",
		"order": [],
		"folders_order": [
			"d7a11894-c1dc-411e-a91f-2f09e1952200",
			"ca6666ff-d89f-4ddb-abeb-882cbda0ba1e",
			"00fbb7a0-2158-481a-b4f4-a3dcf063508a"
		],
		"isFavorite": false
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "/drinks",
			"id": "43967af0-41f4-40b4-a330-aff639ba900a",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"9"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "9",
			"totalRequestTime": "9",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "832496d5-d554-4ae5-95d2-33d81b17c92e",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "4",
			"totalRequestTime": "4",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "1564c4f0-f930-42fe-9fa1-d51b62d5174f",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"8"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "8",
			"totalRequestTime": "8",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "5950df21-00f8-40ea-a263-580e072f1ce4",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "4",
			"totalRequestTime": "4",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "6d4b9c4e-4c66-4548-94a0-a51acbf4ce5f",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"5"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "5",
			"totalRequestTime": "5",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "b6d8c265-0dfd-436b-95b1-1e9df252ee25",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"5"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "5",
			"totalRequestTime": "5",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "41c3cfd7-574b-4bcd-a325-783ad40fdecb",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1827"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "1827",
			"totalRequestTime": "1827",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "96b8089d-73f7-4f88-8672-e12e91263ecd",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4485"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "4485",
			"totalRequestTime": "4485",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "b4cc02fa-b7ca-4820-80aa-ab236b415796",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1589"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "1589",
			"totalRequestTime": "1589",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "fc84b527-4082-4788-907b-9a48d11af849",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3010"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "3010",
			"totalRequestTime": "3010",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "8130671f-b68d-4a76-b8ac-b9c9bff59648",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"6"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "6",
			"totalRequestTime": "6",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "2d22084f-de3a-4742-a9d7-67d2f7a6d29b",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3075"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "3075",
			"totalRequestTime": "3075",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "289fe4c7-1736-40f3-ab33-814ba5896fad",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1691"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "1691",
			"totalRequestTime": "1691",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "ac4de7e6-9846-4e85-b688-cd568686ada0",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1618"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "1618",
			"totalRequestTime": "1618",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "b249113b-7c94-4d07-8134-c0831771a4ba",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1674"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "1674",
			"totalRequestTime": "1674",
			"iterationResults": {}
		}
	],
	"totalPass": 20,
	"totalFail": 0,
	"totalTime": 19010,
	"lifecycle": "done",
	"requests": [
		{
			"name": "/drinks",
			"id": "43967af0-41f4-40b4-a330-aff639ba900a",
			"url": "localhost:5000/drinks",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "832496d5-d554-4ae5-95d2-33d81b17c92e",
			"url": "localhost:5000/drinks-detail",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "1564c4f0-f930-42fe-9fa1-d51b62d5174f",
			"url": "localhost:5000/drinks",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "5950df21-00f8-40ea-a263-580e072f1ce4",
			"url": "localhost:5000/drinks/1",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "6d4b9c4e-4c66-4548-94a0-a51acbf4ce5f",
			"url": "localhost:5000/drinks/1",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "b6d8c265-0dfd-436b-95b1-1e9df252ee25",
			"url": "localhost:5000/drinks",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "41c3cfd7-574b-4bcd-a325-783ad40fdecb",
			"url": "localhost:5000/drinks-detail",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "96b8089d-73f7-4f88-8672-e12e91263ecd",
			"url": "localhost:5000/drinks",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "b4cc02fa-b7ca-4820-80aa-ab236b415796",
			"url": "localhost:5000/drinks/1",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "fc84b527-4082-4788-907b-9a48d11af849",
			"url": "localhost:5000/drinks/1",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "8130671f-b68d-4a76-b8ac-b9c9bff59648",
			"url": "localhost:5000/drinks",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "2d22084f-de3a-4742-a9d7-67d2f7a6d29b",
			"url": "localhost:5000/drinks-detail",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "289fe4c7-1736-40f3-ab33-814ba5896fad",
			"url": "localhost:5000/drinks",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "ac4de7e6-9846-4e85-b688-cd568686ada0",
			"url": "localhost:5000/drinks/1",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "b249113b-7c94-4d07-8134-c0831771a4ba",
			"url": "localhost:5000/drinks/1",
			"time": "2020-02-10T17:40:25.242Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}